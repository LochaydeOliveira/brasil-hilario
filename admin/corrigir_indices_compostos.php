<?php
/**
 * CORRE√á√ÉO DOS √çNDICES COMPOSTOS DO SISTEMA DE AN√öNCIOS
 * Brasil Hil√°rio - Corre√ß√£o final dos √≠ndices
 * 
 * Este script corrige os √≠ndices compostos que falharam.
 */

// Configura√ß√µes
define('DEBUG_MODE', true);

// Incluir configura√ß√µes
require_once '../config/config.php';
require_once '../config/database_unified.php';

// Verificar se o usu√°rio est√° logado como admin
session_start();
if (!isset($_SESSION['usuario_id']) || $_SESSION['usuario_tipo'] !== 'admin') {
    die("Acesso negado. Apenas administradores podem executar este script.");
}

// Fun√ß√£o para log
function logMessage($message, $type = 'info') {
    $timestamp = date('Y-m-d H:i:s');
    $log = "[$timestamp] [$type] $message\n";
    
    if (DEBUG_MODE) {
        echo $log;
    }
    
    error_log($log);
}

// Fun√ß√£o para verificar se √≠ndice existe
function indexExists($table_name, $index_name) {
    try {
        $dbManager = DatabaseManager::getInstance();
        $sql = "SHOW INDEX FROM `$table_name` WHERE Key_name = ?";
        $result = $dbManager->queryOne($sql, [$index_name]);
        return $result !== null;
    } catch (Exception $e) {
        return false;
    }
}

// Fun√ß√£o para executar SQL
function executeSQL($sql, $description = '') {
    try {
        $dbManager = DatabaseManager::getInstance();
        $result = $dbManager->execute($sql);
        
        if ($result) {
            logMessage("‚úÖ $description", 'success');
            return true;
        } else {
            logMessage("‚ùå Falha: $description", 'error');
            return false;
        }
    } catch (Exception $e) {
        logMessage("‚ùå Erro: $description - " . $e->getMessage(), 'error');
        return false;
    }
}

// In√≠cio da corre√ß√£o
logMessage("üîß Iniciando corre√ß√£o dos √≠ndices compostos...", 'info');

// 1. √çndices compostos para tabela anuncios
logMessage("üîß Criando √≠ndices compostos para tabela anuncios...", 'info');

$anuncios_compound_indexes = [
    ['idx_anuncios_localizacao_ativo', 'anuncios', ['localizacao', 'ativo']],
    ['idx_anuncios_localizacao_ativo_layout', 'anuncios', ['localizacao', 'ativo', 'layout']]
];

foreach ($anuncios_compound_indexes as $index) {
    $index_name = $index[0];
    $table_name = $index[1];
    $columns = $index[2];
    
    if (!indexExists($table_name, $index_name)) {
        $columns_sql = implode('`, `', $columns);
        $sql = "CREATE INDEX `$index_name` ON `$table_name`(`$columns_sql`)";
        executeSQL($sql, "Criando √≠ndice composto $index_name");
    } else {
        logMessage("‚ÑπÔ∏è √çndice composto $index_name j√° existe", 'info');
    }
}

// 2. √çndices compostos para tabela grupos_anuncios
logMessage("üîß Criando √≠ndices compostos para tabela grupos_anuncios...", 'info');

$grupos_compound_indexes = [
    ['idx_grupos_localizacao_ativo', 'grupos_anuncios', ['localizacao', 'ativo']],
    ['idx_grupos_localizacao_config', 'grupos_anuncios', ['localizacao', 'ativo', 'posts_especificos', 'aparecer_inicio']]
];

foreach ($grupos_compound_indexes as $index) {
    $index_name = $index[0];
    $table_name = $index[1];
    $columns = $index[2];
    
    if (!indexExists($table_name, $index_name)) {
        $columns_sql = implode('`, `', $columns);
        $sql = "CREATE INDEX `$index_name` ON `$table_name`(`$columns_sql`)";
        executeSQL($sql, "Criando √≠ndice composto $index_name");
    } else {
        logMessage("‚ÑπÔ∏è √çndice composto $index_name j√° existe", 'info');
    }
}

// 3. √çndices compostos para tabela grupos_anuncios_items
logMessage("üîß Criando √≠ndices compostos para tabela grupos_anuncios_items...", 'info');

$grupos_items_compound_indexes = [
    ['idx_grupos_items_grupo_ordem', 'grupos_anuncios_items', ['grupo_id', 'ordem']]
];

foreach ($grupos_items_compound_indexes as $index) {
    $index_name = $index[0];
    $table_name = $index[1];
    $columns = $index[2];
    
    if (!indexExists($table_name, $index_name)) {
        $columns_sql = implode('`, `', $columns);
        $sql = "CREATE INDEX `$index_name` ON `$table_name`(`$columns_sql`)";
        executeSQL($sql, "Criando √≠ndice composto $index_name");
    } else {
        logMessage("‚ÑπÔ∏è √çndice composto $index_name j√° existe", 'info');
    }
}

// 4. √çndices compostos para tabela cliques_anuncios
logMessage("üîß Criando √≠ndices compostos para tabela cliques_anuncios...", 'info');

$cliques_compound_indexes = [
    ['idx_cliques_anuncio_data', 'cliques_anuncios', ['anuncio_id', 'data_clique']],
    ['idx_cliques_post_data', 'cliques_anuncios', ['post_id', 'data_clique']],
    ['idx_cliques_tipo_data', 'cliques_anuncios', ['tipo_clique', 'data_clique']],
    ['idx_cliques_ip_data', 'cliques_anuncios', ['ip_usuario', 'data_clique']],
    ['idx_cliques_anuncio_periodo', 'cliques_anuncios', ['anuncio_id', 'data_clique', 'tipo_clique']]
];

foreach ($cliques_compound_indexes as $index) {
    $index_name = $index[0];
    $table_name = $index[1];
    $columns = $index[2];
    
    if (!indexExists($table_name, $index_name)) {
        $columns_sql = implode('`, `', $columns);
        $sql = "CREATE INDEX `$index_name` ON `$table_name`(`$columns_sql`)";
        executeSQL($sql, "Criando √≠ndice composto $index_name");
    } else {
        logMessage("‚ÑπÔ∏è √çndice composto $index_name j√° existe", 'info');
    }
}

// 5. Verificar estrutura das tabelas
logMessage("üîç Verificando estrutura das tabelas...", 'info');

$dbManager = DatabaseManager::getInstance();

// Verificar colunas da tabela anuncios
$anuncios_columns = $dbManager->query("SHOW COLUMNS FROM `anuncios`");
logMessage("üìã Colunas da tabela anuncios:", 'info');
foreach ($anuncios_columns as $column) {
    logMessage("   - {$column['Field']} ({$column['Type']})", 'info');
}

// Verificar colunas da tabela grupos_anuncios
$grupos_columns = $dbManager->query("SHOW COLUMNS FROM `grupos_anuncios`");
logMessage("üìã Colunas da tabela grupos_anuncios:", 'info');
foreach ($grupos_columns as $column) {
    logMessage("   - {$column['Field']} ({$column['Type']})", 'info');
}

// Verificar colunas da tabela cliques_anuncios
$cliques_columns = $dbManager->query("SHOW COLUMNS FROM `cliques_anuncios`");
logMessage("üìã Colunas da tabela cliques_anuncios:", 'info');
foreach ($cliques_columns as $column) {
    logMessage("   - {$column['Field']} ({$column['Type']})", 'info');
}

// 6. Teste de performance
logMessage("‚ö° Testando performance das consultas...", 'info');

// Teste 1: Consulta de an√∫ncios ativos
$start_time = microtime(true);
$anuncios_ativos = $dbManager->query("SELECT COUNT(*) as total FROM anuncios WHERE ativo = 1 AND localizacao = 'sidebar'");
$end_time = microtime(true);
$execution_time = round(($end_time - $start_time) * 1000, 2);
logMessage("‚ö° Consulta an√∫ncios ativos: {$execution_time}ms", 'info');

// Teste 2: Consulta de grupos ativos
$start_time = microtime(true);
$grupos_ativos = $dbManager->query("SELECT COUNT(*) as total FROM grupos_anuncios WHERE ativo = 1 AND localizacao = 'sidebar'");
$end_time = microtime(true);
$execution_time = round(($end_time - $start_time) * 1000, 2);
logMessage("‚ö° Consulta grupos ativos: {$execution_time}ms", 'info');

// Teste 3: Consulta de cliques recentes
$start_time = microtime(true);
$cliques_recentes = $dbManager->query("SELECT COUNT(*) as total FROM cliques_anuncios WHERE data_clique >= DATE_SUB(NOW(), INTERVAL 7 DAY)");
$end_time = microtime(true);
$execution_time = round(($end_time - $start_time) * 1000, 2);
logMessage("‚ö° Consulta cliques recentes: {$execution_time}ms", 'info');

// 7. Estat√≠sticas finais
logMessage("üìä Gerando estat√≠sticas finais...", 'info');

$stats = $dbManager->query("
    SELECT 
        (SELECT COUNT(*) FROM anuncios WHERE ativo = 1) as anuncios_ativos,
        (SELECT COUNT(*) FROM grupos_anuncios WHERE ativo = 1) as grupos_ativos,
        (SELECT COUNT(*) FROM cliques_anuncios WHERE data_clique >= DATE_SUB(NOW(), INTERVAL 30 DAY)) as cliques_30dias,
        (SELECT COUNT(*) FROM anuncios_posts) as associacoes_anuncios_posts,
        (SELECT COUNT(*) FROM grupos_anuncios_posts) as associacoes_grupos_posts,
        (SELECT COUNT(*) FROM cache_anuncios) as cache_entries,
        (SELECT COUNT(*) FROM estatisticas_anuncios) as estatisticas_entries
");

if ($stats) {
    $stat = $stats[0];
    logMessage("üìä Estat√≠sticas finais do sistema:", 'info');
    logMessage("   - An√∫ncios ativos: {$stat['anuncios_ativos']}", 'info');
    logMessage("   - Grupos ativos: {$stat['grupos_ativos']}", 'info');
    logMessage("   - Cliques (30 dias): {$stat['cliques_30dias']}", 'info');
    logMessage("   - Associa√ß√µes an√∫ncios-posts: {$stat['associacoes_anuncios_posts']}", 'info');
    logMessage("   - Associa√ß√µes grupos-posts: {$stat['associacoes_grupos_posts']}", 'info');
    logMessage("   - Entradas de cache: {$stat['cache_entries']}", 'info');
    logMessage("   - Entradas de estat√≠sticas: {$stat['estatisticas_entries']}", 'info');
}

// 8. Finaliza√ß√£o
logMessage("üéâ Corre√ß√£o dos √≠ndices compostos conclu√≠da com sucesso!", 'success');
logMessage("üìù Sistema 100% otimizado e pronto para produ√ß√£o!", 'info');

echo "<h2>‚úÖ Corre√ß√£o Final Conclu√≠da!</h2>";
echo "<p>Todos os √≠ndices compostos foram criados com sucesso.</p>";
echo "<p>O sistema est√° completamente otimizado!</p>";
echo "<p><a href='anuncios.php'>‚Üê Voltar para An√∫ncios</a></p>";
?>
